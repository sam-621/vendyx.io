type Mutation {
  createCollection(input: CreateCollectionInput!): Collection!
  updateCollection(id: ID!, input: UpdateCollectionInput!): Collection!
  removeCollection(ids: [ID!]!): Boolean!
}

type Query {
  collections(input: CollectionListInput): CollectionList!
}

input CreateCollectionInput {
  name: String!
  description: String
  enabled: Boolean
  products: [ID!]
  assets: [AssetInCollectionInput!]
}

input UpdateCollectionInput {
  name: String
  description: String
  enabled: Boolean
  products: [ID!]
  assets: [AssetInCollectionInput!]
}

input AssetInCollectionInput {
  id: ID!
}

input CollectionListInput {
  """
  Skip the first n results
  """
  skip: Int

  """
  takes n result from where the skip position is
  """
  take: Int

  """
  Filters to apply
  """
  filters: CollectionFilters
}

input CollectionFilters {
  name: StringFilter
  enabled: BooleanFilter
}
